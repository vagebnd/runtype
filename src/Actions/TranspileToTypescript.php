<?php

namespace Vagebond\Runtype\Actions;

use Illuminate\Support\Collection;
use Vagebond\Runtype\Values\TypescriptProperty;
use Vagebond\Runtype\Values\TypescriptType;

class TranspileToTypescript
{
    private Collection $lines;

    public function __construct()
    {
        $this->lines = collect();
        $this->lines->push('// This file is generated by Vagebond\Runtype');
    }

    /** @param  Collection<TypescriptType>  $types */
    public function handle(Collection $types)
    {
        $types->each(fn (TypescriptType $type) => $this->processType($type));

        return $this->lines->join(PHP_EOL);
    }

    private function processType(TypescriptType $type): void
    {
        $this->lines->push("// {$type->getClass()}");

        if ($type->listProperties()->isEmpty()) {
            $this->lines->push("export type {$type->getName()} = any");

            return;
        }

        $this->lines->push("export type {$type->getName()} = {");

        $type->listProperties()->each(fn (TypescriptProperty $property) => $this->processProperty($property));

        $this->lines->push('}');
    }

    private function processProperty(TypescriptProperty $property): void
    {
        $this->lines->push("{$property->getName()}:{$property->getType()}");
    }
}
